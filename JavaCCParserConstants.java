/* Generated By:JavaCC: Do not edit this line. JavaCCParserConstants.java */
package jminusminus;

public interface JavaCCParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 6;
  int ABSTRACT = 7;
  int BOOLEAN = 8;
  int CHAR = 9;
  int CLASS = 10;
  int ELSE = 11;
  int EXTENDS = 12;
  int FALSE = 13;
  int IF = 14;
  int IMPORT = 15;
  int INSTANCEOF = 16;
  int INT = 17;
  int NEW = 18;
  int NULL = 19;
  int PACKAGE = 20;
  int PRIVATE = 21;
  int PROTECTED = 22;
  int PUBLIC = 23;
  int RETURN = 24;
  int STATIC = 25;
  int SUPER = 26;
  int THIS = 27;
  int TRUE = 28;
  int VOID = 29;
  int WHILE = 30;
  int BREAK = 31;
  int CASE = 32;
  int CATCH = 33;
  int CONTINUE = 34;
  int DFLT = 35;
  int DO = 36;
  int DOUBLE = 37;
  int FINAL = 38;
  int FINALLY = 39;
  int FOR = 40;
  int IMPLEMENTS = 41;
  int INTERFACE = 42;
  int LONG = 43;
  int SWITCH = 44;
  int THROW = 45;
  int THROWS = 46;
  int TRY = 47;
  int PLUS = 48;
  int ASSIGN = 49;
  int DEC = 50;
  int EQUAL = 51;
  int GT = 52;
  int INC = 53;
  int LAND = 54;
  int LE = 55;
  int LNOT = 56;
  int MINUS = 57;
  int PLUS_ASSIGN = 58;
  int STAR = 59;
  int COND = 60;
  int UCOM = 61;
  int LNOT_ASSIGN = 62;
  int DIV = 63;
  int DIV_ASSIGN = 64;
  int MINUS_ASSIGN = 65;
  int STAR_ASSIGN = 66;
  int REM = 67;
  int REM_ASSIGN = 68;
  int RSHIFT = 69;
  int RSHIFT_ASSIGN = 70;
  int LOGICALRSHIFT = 71;
  int LOGICALRSHIFT_ASSIGN = 72;
  int GT_ASSIGN = 73;
  int LSHIFT = 74;
  int LSHIFT_ASSIGN = 75;
  int LESS = 76;
  int XOR = 77;
  int XOR_ASSIGN = 78;
  int IOR = 79;
  int IOR_ASSIGN = 80;
  int DOUBLE_IOR = 81;
  int AND = 82;
  int AND_ASSIGN = 83;
  int LPAREN = 84;
  int RPAREN = 85;
  int LCURLY = 86;
  int RCURLY = 87;
  int LBRACK = 88;
  int RBRACK = 89;
  int SEMI = 90;
  int COMMA = 91;
  int DOT = 92;
  int COLON = 93;
  int IDENTIFIER = 94;
  int LETTER = 95;
  int DIGIT = 96;
  int NON_ZERO_DIGIT = 97;
  int INT_LITERAL = 98;
  int CHAR_LITERAL = 99;
  int STRING_LITERAL = 100;
  int DIGITS = 101;
  int EXPONENT = 102;
  int SUFFIX = 103;
  int LONG_LITERAL = 104;
  int DOUBLE_LITERAL = 105;
  int ESC = 106;
  int ERROR = 107;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "\"abstract\"",
    "\"boolean\"",
    "\"char\"",
    "\"class\"",
    "\"else\"",
    "\"extends\"",
    "\"false\"",
    "\"if\"",
    "\"import\"",
    "\"instanceof\"",
    "\"int\"",
    "\"new\"",
    "\"null\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"return\"",
    "\"static\"",
    "\"super\"",
    "\"this\"",
    "\"true\"",
    "\"void\"",
    "\"while\"",
    "\"break\"",
    "\"case\"",
    "\"catch\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"double\"",
    "\"final\"",
    "\"finally\"",
    "\"for\"",
    "\"implements\"",
    "\"interface\"",
    "\"long\"",
    "\"switch\"",
    "\"throw\"",
    "\"throws\"",
    "\"try\"",
    "\"+\"",
    "\"=\"",
    "\"--\"",
    "\"==\"",
    "\">\"",
    "\"++\"",
    "\"&&\"",
    "\"<=\"",
    "\"!\"",
    "\"-\"",
    "\"+=\"",
    "\"*\"",
    "\"?\"",
    "\"~\"",
    "\"!=\"",
    "\"/\"",
    "\"/=\"",
    "\"-=\"",
    "\"*=\"",
    "\"%\"",
    "\"%=\"",
    "\">>\"",
    "\">>=\"",
    "\">>>\"",
    "\">>>=\"",
    "\">=\"",
    "\"<<\"",
    "\"<<=\"",
    "\"<\"",
    "\"^\"",
    "\"^=\"",
    "\"|\"",
    "\"|=\"",
    "\"||\"",
    "\"&\"",
    "\"&=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<NON_ZERO_DIGIT>",
    "<INT_LITERAL>",
    "<CHAR_LITERAL>",
    "<STRING_LITERAL>",
    "<DIGITS>",
    "<EXPONENT>",
    "<SUFFIX>",
    "<LONG_LITERAL>",
    "<DOUBLE_LITERAL>",
    "<ESC>",
    "<ERROR>",
  };

}
